/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   variable_expand.c                                  :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: rdomange <romitdomange@gmail.com>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2024/09/20 00:18:55 by rdomange          #+#    #+#             */
/*   Updated: 2024/09/20 00:18:57 by rdomange         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "minishell.h"

int	quoted(char c, char *quote)
{
	char	prev;

	prev = *quote;
	if (c == '\'' || c == '\"')
	{
		if (!*quote)
			*quote = c;
		else if (c == *quote)
			*quote = 0;
	}
	return (prev != *quote);
}

static char	*dollar_tilda(char *str, char **env, char quote, int i, char *exit_status)
{
	char	*ret;

	if (*str == '~' && !quote)
		if (*(str + 1) == 0 || *(str + 1) == ' ' || *(str + 1) == '/')
			if (!i || *(str - 1) == ' ')
				return (ft_env_get(env, "HOME"));
	if (str[0] == '$' && str[1] == '?')
		return (exit_status);
	if (*str == '$' && quote != '\'')
		ret = ft_env_get(env, str + 1);
	if (!ret)
		ret = ft_env_get(env_extra, str + 1);
	if (!ret)
		ret = "";
	return (ret);
}

static int	cash_money_len(char *str, char **env, char *exit_status)
{
	int		len;
	char	*var;
	char	quote;
	char	*str_free;

	len = 0;
	quote = 0;
	str_free = str;
	while (*str)
	{
		quoted(*str, &quote);
		var = dollar_tilda(str, env, quote, str == str_free, exit_status);
		if (var)
		{
			if (str[0] == '$' && str[1] == '?')
				str += 2;
			else if (*str == '$' && ft_env_namelen(str + 1))
				str += ft_env_namelen(str + 1) + 1;
			else if (*str == '~')
				str++;
			len += ft_strlen(var);
		}
		else
		{
			str++;
			len++;
		}
	}
	return (len);
}

char	*cash_money(char *str, char **env, char *exit_status)
{
	int		len;
	int		i;
	char	*ret;
	char	*var;
	char	quote;

	len = cash_money_len(str, env, exit_status);
	ret = (char *)malloc((len + 1) * sizeof(char));
	i = 0;
	quote = 0;
	while (i < len)
	{
		quoted(*str, &quote);
		var = dollar_tilda(str, env, quote, i, exit_status);
		if (var)
		{
			if (str[0] == '$' && str[1] == '?' && quote != '\'')
				str += 2;
			if (*str == '$' && quote != '\'' && (*(str + 1) == '_' || \
			ft_isalpha(*(str + 1))))
			{
				str++;
				while (ft_isalnum(*str) || *str == '_')
					str++;
			}
			else if (*str == '~')
				str++;
			while (*var && i < len)
				ret[i++] = *var++;
		}
		else
			ret[i++] = *str++;
	}
	ret[i] = 0;
	return (ret);
}